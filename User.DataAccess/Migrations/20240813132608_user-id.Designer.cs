// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using User.DataAccess.Context;

#nullable disable

namespace User.DataAccess.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20240813132608_user-id")]
    partial class userid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("User.DataAccess.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRenting")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3981286b-7188-4db1-a6ea-1347741e64dd"),
                            Balance = 27289.851974742900000m,
                            Email = "Alivia86@gmail.com",
                            FirstName = "Makenna",
                            IsRenting = true,
                            LastName = "Turner",
                            PhoneNumber = "(288) 878-6790 x3797",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("b265198d-30e4-4b5f-a3e8-448b466d1cec"),
                            Balance = 22410.983847761850000m,
                            Email = "Joshuah88@yahoo.com",
                            FirstName = "Marcel",
                            IsRenting = true,
                            LastName = "Feeney",
                            PhoneNumber = "271.211.7721 x254",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("d3bf5f6c-2ada-4a32-9c0b-3231bf53380d"),
                            Balance = 12195.554944194200000m,
                            Email = "Alayna_Doyle@gmail.com",
                            FirstName = "Nelle",
                            IsRenting = false,
                            LastName = "Gottlieb",
                            PhoneNumber = "1-683-584-9709 x60865",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("22d734e5-49ad-42f3-8e1b-a1bb48129287"),
                            Balance = 29756.162646547800000m,
                            Email = "Garland.Reichert11@hotmail.com",
                            FirstName = "Maudie",
                            IsRenting = true,
                            LastName = "Sauer",
                            PhoneNumber = "523.465.0924 x2137",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("6e96d0f9-67ea-4728-984c-768e31e19f5d"),
                            Balance = 44215.477645722400000m,
                            Email = "Polly_Will48@gmail.com",
                            FirstName = "Santa",
                            IsRenting = false,
                            LastName = "Langworth",
                            PhoneNumber = "(899) 205-2441",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("26760811-59e9-43f0-84de-88c09056d513"),
                            Balance = 32281.117240160450000m,
                            Email = "Floyd_Mayert@gmail.com",
                            FirstName = "Eloise",
                            IsRenting = false,
                            LastName = "Rogahn",
                            PhoneNumber = "782.583.1849",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("08d70c69-3be4-42c4-8482-939f9fa2f3a8"),
                            Balance = 33570.767887354350000m,
                            Email = "Winston.Rosenbaum60@gmail.com",
                            FirstName = "Tristian",
                            IsRenting = false,
                            LastName = "Collier",
                            PhoneNumber = "(856) 766-5911",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("7caa52e8-6b32-4598-9ac1-297e57122d43"),
                            Balance = 26345.15083946900000m,
                            Email = "Delbert25@yahoo.com",
                            FirstName = "Jovany",
                            IsRenting = false,
                            LastName = "Howe",
                            PhoneNumber = "1-957-800-0426 x777",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("5a3c3d28-a914-4c25-a6ab-50398a0a1d83"),
                            Balance = 2343.5537826561750000m,
                            Email = "Derek.Metz@yahoo.com",
                            FirstName = "Hattie",
                            IsRenting = false,
                            LastName = "Ruecker",
                            PhoneNumber = "(791) 938-8926 x41487",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("4162a2f3-e146-4aca-85c7-4d5273d0542a"),
                            Balance = 31658.576939257200000m,
                            Email = "Winnifred_Stanton78@gmail.com",
                            FirstName = "Kaitlin",
                            IsRenting = false,
                            LastName = "Lehner",
                            PhoneNumber = "748.843.6456 x9281",
                            UserId = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
